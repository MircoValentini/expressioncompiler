Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input line

    3 line: '\n'
    4     | exp '\n'
    5     | error '\n'

    6 exp: NUM
    7    | CONST
    8    | VAR
    9    | VAR '=' exp
   10    | ZERO
   11    | ZERO '(' ')'
   12    | MANY '(' args ')'
   13    | exp '+' exp
   14    | exp '-' exp
   15    | exp '*' exp
   16    | exp '/' exp
   17    | exp '%' exp
   18    | '-' exp
   19    | exp '^' exp
   20    | '(' exp ')'

   21 args: exp
   22     | exp ',' args


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4 5
'%' (37) 17
'(' (40) 11 12 20
')' (41) 11 12 20
'*' (42) 15
'+' (43) 13
',' (44) 22
'-' (45) 14 18
'/' (47) 16
'=' (61) 9
'^' (94) 19
error (256) 5
NUM (258) 6
CONST (259) 7
VAR (260) 8 9
ZERO (261) 10 11
MANY (262) 12
NEG (263)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
input (21)
    on left: 1 2, on right: 0 2
line (22)
    on left: 3 4 5, on right: 2
exp (23)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20, on right: 4
    9 13 14 15 16 17 18 19 20 21 22
args (24)
    on left: 21 22, on right: 12 22


State 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . line

    $end   shift, and go to state 2
    error  shift, and go to state 3
    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '\n'   shift, and go to state 10
    '('    shift, and go to state 11

    line  go to state 12
    exp   go to state 13


State 2

    0 $accept: input $end .

    $default  accept


State 3

    5 line: error . '\n'

    '\n'  shift, and go to state 14


State 4

    6 exp: NUM .

    $default  reduce using rule 6 (exp)


State 5

    7 exp: CONST .

    $default  reduce using rule 7 (exp)


State 6

    8 exp: VAR .
    9    | VAR . '=' exp

    '='  shift, and go to state 15

    $default  reduce using rule 8 (exp)


State 7

   10 exp: ZERO .
   11    | ZERO . '(' ')'

    '('  shift, and go to state 16

    $default  reduce using rule 10 (exp)


State 8

   12 exp: MANY . '(' args ')'

    '('  shift, and go to state 17


State 9

   18 exp: '-' . exp

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp  go to state 18


State 10

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 11

   20 exp: '(' . exp ')'

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp  go to state 19


State 12

    2 input: input line .

    $default  reduce using rule 2 (input)


State 13

    4 line: exp . '\n'
   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . '*' exp
   16    | exp . '/' exp
   17    | exp . '%' exp
   19    | exp . '^' exp

    '-'   shift, and go to state 20
    '+'   shift, and go to state 21
    '*'   shift, and go to state 22
    '/'   shift, and go to state 23
    '%'   shift, and go to state 24
    '^'   shift, and go to state 25
    '\n'  shift, and go to state 26


State 14

    5 line: error '\n' .

    $default  reduce using rule 5 (line)


State 15

    9 exp: VAR '=' . exp

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp  go to state 27


State 16

   11 exp: ZERO '(' . ')'

    ')'  shift, and go to state 28


State 17

   12 exp: MANY '(' . args ')'

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp   go to state 29
    args  go to state 30


State 18

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . '*' exp
   16    | exp . '/' exp
   17    | exp . '%' exp
   18    | '-' exp .
   19    | exp . '^' exp

    '^'  shift, and go to state 25

    $default  reduce using rule 18 (exp)


State 19

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . '*' exp
   16    | exp . '/' exp
   17    | exp . '%' exp
   19    | exp . '^' exp
   20    | '(' exp . ')'

    '-'  shift, and go to state 20
    '+'  shift, and go to state 21
    '*'  shift, and go to state 22
    '/'  shift, and go to state 23
    '%'  shift, and go to state 24
    '^'  shift, and go to state 25
    ')'  shift, and go to state 31


State 20

   14 exp: exp '-' . exp

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp  go to state 32


State 21

   13 exp: exp '+' . exp

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp  go to state 33


State 22

   15 exp: exp '*' . exp

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp  go to state 34


State 23

   16 exp: exp '/' . exp

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp  go to state 35


State 24

   17 exp: exp '%' . exp

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp  go to state 36


State 25

   19 exp: exp '^' . exp

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp  go to state 37


State 26

    4 line: exp '\n' .

    $default  reduce using rule 4 (line)


State 27

    9 exp: VAR '=' exp .
   13    | exp . '+' exp
   14    | exp . '-' exp
   15    | exp . '*' exp
   16    | exp . '/' exp
   17    | exp . '%' exp
   19    | exp . '^' exp

    '-'  shift, and go to state 20
    '+'  shift, and go to state 21
    '*'  shift, and go to state 22
    '/'  shift, and go to state 23
    '%'  shift, and go to state 24
    '^'  shift, and go to state 25

    $default  reduce using rule 9 (exp)


State 28

   11 exp: ZERO '(' ')' .

    $default  reduce using rule 11 (exp)


State 29

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . '*' exp
   16    | exp . '/' exp
   17    | exp . '%' exp
   19    | exp . '^' exp
   21 args: exp .
   22     | exp . ',' args

    '-'  shift, and go to state 20
    '+'  shift, and go to state 21
    '*'  shift, and go to state 22
    '/'  shift, and go to state 23
    '%'  shift, and go to state 24
    '^'  shift, and go to state 25
    ','  shift, and go to state 38

    $default  reduce using rule 21 (args)


State 30

   12 exp: MANY '(' args . ')'

    ')'  shift, and go to state 39


State 31

   20 exp: '(' exp ')' .

    $default  reduce using rule 20 (exp)


State 32

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   14    | exp '-' exp .
   15    | exp . '*' exp
   16    | exp . '/' exp
   17    | exp . '%' exp
   19    | exp . '^' exp

    '*'  shift, and go to state 22
    '/'  shift, and go to state 23
    '%'  shift, and go to state 24
    '^'  shift, and go to state 25

    $default  reduce using rule 14 (exp)


State 33

   13 exp: exp . '+' exp
   13    | exp '+' exp .
   14    | exp . '-' exp
   15    | exp . '*' exp
   16    | exp . '/' exp
   17    | exp . '%' exp
   19    | exp . '^' exp

    '*'  shift, and go to state 22
    '/'  shift, and go to state 23
    '%'  shift, and go to state 24
    '^'  shift, and go to state 25

    $default  reduce using rule 13 (exp)


State 34

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . '*' exp
   15    | exp '*' exp .
   16    | exp . '/' exp
   17    | exp . '%' exp
   19    | exp . '^' exp

    '^'  shift, and go to state 25

    $default  reduce using rule 15 (exp)


State 35

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . '*' exp
   16    | exp . '/' exp
   16    | exp '/' exp .
   17    | exp . '%' exp
   19    | exp . '^' exp

    '^'  shift, and go to state 25

    $default  reduce using rule 16 (exp)


State 36

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . '*' exp
   16    | exp . '/' exp
   17    | exp . '%' exp
   17    | exp '%' exp .
   19    | exp . '^' exp

    '^'  shift, and go to state 25

    $default  reduce using rule 17 (exp)


State 37

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . '*' exp
   16    | exp . '/' exp
   17    | exp . '%' exp
   19    | exp . '^' exp
   19    | exp '^' exp .

    '^'  shift, and go to state 25

    $default  reduce using rule 19 (exp)


State 38

   22 args: exp ',' . args

    NUM    shift, and go to state 4
    CONST  shift, and go to state 5
    VAR    shift, and go to state 6
    ZERO   shift, and go to state 7
    MANY   shift, and go to state 8
    '-'    shift, and go to state 9
    '('    shift, and go to state 11

    exp   go to state 29
    args  go to state 40


State 39

   12 exp: MANY '(' args ')' .

    $default  reduce using rule 12 (exp)


State 40

   22 args: exp ',' args .

    $default  reduce using rule 22 (args)
